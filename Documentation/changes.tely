\input texinfo @c -*- coding: utf-8; mode: texinfo; -*-
@setfilename lilypond-changes.info
@settitle LilyPond Changes

@include macros.itexi

@ifhtml
@macro inputfileref{DIR,NAME}
@uref{../../\DIR\/collated-files.html#\NAME\,@file{\DIR\/\NAME\}}@c
@end macro
@macro usermanref{NAME}
@inforef{\NAME\,,../user/lilypond/lilypond}@c
@end macro
@end ifhtml

@ifnothtml
@macro inputfileref{DIR,NAME}
@file{\DIR\/\NAME\}@c
@end macro
@macro usermanref{NAME}
See user manual, \NAME\
@end macro
@end ifnothtml

@macro textanchor{NAME}
@html
<a name="\NAME\"></a>
@end html
@end macro


@documentencoding utf-8
@documentlanguage en
@afourpaper

@finalout

@node Top
@top New features in 2.20 since 2.18

@allowcodebreaks false

@itemize

@ignore

HINTS

* add new items at the top

* only show verbatim input for syntax/input changes

* try to be as brief possible in those cases

* don't try to provide real-world examples, they often get too big,
which scares away people.

* Write complete sentences.

* only show user-visible changes.

@end ignore

@item
Four new Clefs have been added.  @emph{Double G}, @emph{Tenor G},
@emph{Varpercussion} and @emph{varC}.
@lilypond[verbatim,quote,fragment]
  \override Staff.Clef.full-size-change = ##t

  \clef "GG" c c c c
  \clef "tenorG" c c c c
  \clef "varC" c c c c
  \clef "varpercussion" c c c c

  \break
  \override Staff.Clef.full-size-change = ##f

  \clef "GG" c c c c
  \clef "tenorG" c c c c
  \clef "varC" c c c c
  \clef "varpercussion" c c c c
@end lilypond

@item
Isolated durations in music sequences now stand for unpitched
notes.  This may be useful for specifying rhythms to music or
scheme functions.  When encountered in the final score, the
pitches are provided by the preceding note or chord.  Here are two
examples where this makes for readable input:

@lilypond[verbatim,quote]
\new DrumStaff \with { \override StaffSymbol.line-count = 1 }
\drummode {
  \time 3/4
  tambourine 8 \tuplet 3/2 { 16 16 16 }
             8 \tuplet 3/2 { 16 16 16 } 8 8 |
}
@end lilypond

@lilypond[verbatim,quote]
\new Staff { r16 c'16 ~ 8 ~ 4 ~ 2 | }
@end lilypond

@item
Beaming exceptions can now be constructed using the
@code{\beamExceptions} scheme function.  One can now write

@lilypond[verbatim,quote,relative=1]
\time #'(2 1) 3/16
\set Timing.beamExceptions =
  \beamExceptions { 32[ 32] 32[ 32] 32[ 32] }
c16 c c |
\repeat unfold 6 { c32 } |
@end lilypond

@noindent
with multiple exceptions separated with @code{|} bar checks
(writing the exception pattern without pitches is convenient but
not mandatory).  Previously, setting the beam exceptions would
have required writing

@example
\set Timing.beamExceptions =
#'(                         ;start of alist
   (end .                   ;entry for end of beams
    (                       ;start of alist of end points
     ((1 . 32) . (2 2 2))   ;rule for 1/32 beams -- end each 1/16
    )))
@end example

@item
The most common articulations are now reflected in MIDI output.
Accent and marcato make notes louder; staccato, staccatissimo and
portato make them shorter. Breath marks shorten the previous
note.

This behavior is customizable through the @code{midiLength} and
@code{midiExtraVelocity} properties on @code{ArticulationEvent}.
See @file{script-init.ly} for examples.

@item
The PostScript functionality of stroke adjustment is no longer
applied automatically but left to the discretion of the PostScript
device (by default, Ghostscript uses it for resolutions up to
150dpi when generating raster images).  When it is enabled, a more
complex drawing algorithm designed to benefit from stroke
adjustment is employed mostly for stems and bar lines.

Stroke adjustment can be forced by specifying the command line
option @samp{-dstrokeadjust} to LilyPond.  When generating
@code{PDF} files, this will usually result in markedly better
looking @code{PDF} previews but significantly larger file size.
Print quality at high resolutions will be unaffected.

@end itemize

@ifhtml
For older news, go to
@uref{http://lilypond.org/doc/v2.18/Documentation/changes/},
@uref{http://lilypond.org/doc/v2.16/Documentation/changes/},
or @uref{../,go back} to the Documentation index.


@end ifhtml

@bye
