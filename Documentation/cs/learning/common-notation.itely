@c -*- coding: utf-8; mode: texinfo; documentlanguage: cs -*-

@ignore
    Translation of GIT committish: 4f7427e7a314a71bde16559247885544256b8213

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes.
@end ignore

@c \version "2.19.2"

@ignore
Tutorial guidelines:
- unless you have a really good reason, use either
    @l ilypond[quote,verbatim]
  or
    @l ilypond[quote,verbatim,fragment,relative=2]
  (without spaces)
  Don't use any other relative=X commands.

- use "aes" and "ees" instead of "as" and "aes".  I know it's not
  correct Dutch naming, but let's not confuse people with this until
  we get to the Basic notation chapter.
- addition for German users to the pitches chapter about naming of pitches.
@end ignore


@node Běžný notový zápis
@chapter Běžný notový zápis
@translationof Common notation

V této části je vysvětleno, jak lze vytvořit překrásnou notovou sazbu,
která obsahuje nejčastěji se vyskytující symboly notového zápisu.
Část se zakládá na @ref{Cvičení,,cvičení}.


@menu
* Notový zápis v jedné notové osnově::
* Více not najednou::
* Písničky::
* Poslední úpravy::
@end menu


@node Notový zápis v jedné notové osnově
@section Notový zápis v jedné notové osnově
@translationof Single staff notation

V této kapitole jsou vyučovány základní složky notového zápisu,
jež se používají pro jeden hlas v jedné notové osnově.

@menu
* Přezkoušení taktů::
* Předznamenání a označení tóniny (předznamenání)::
* Ligatury a legatové obloučky::
* Artikulační znaménka a hlasitost::
* Přidání textu::
* Automatické a ruční trámce::
* Dodatečné rytmické příkazy::
@end menu


@node Přezkoušení taktů
@subsection Přezkoušení taktů
@translationof Bar checks

I když nejsou předepsána, měla by se přezkoušení taktů ve vstupním
souboru používat, aby se ukázalo, kde by měly za běžných okolností
být taktové čáry.  Jsou zapsány symbolem @qq{svislítka},
( @code{|}) (klávesa AltCtrl + <).  S pomocí přezkoušení taktů
může program zajistit, že zadané délky not dají celé takty
na správných místech.  Přezkoušení taktů rovněž ulehčuje
čtení zadaného textu, jelikož do textu přináší pořádek.

@lilypond[verbatim,quote,relative=2]
g1 | e1 | c2. c'4 | g4 c g e | c4 r r2 |
@end lilypond

@seealso
Doporučení pro notový zápis:
@ruser{Přezkoušení taktů a počtu taktů}.


@node Předznamenání a označení tóniny (předznamenání)
@subsection Předznamenání a označení tóniny (předznamenání)
@translationof Accidentals and key signatures

@subheading Předznamenání
@cindex Předznamenání
@cindex Akzidentien
@cindex Křížek
@cindex Dvojitý křížek
@cindex B
@cindex Dvojité b

@funindex es
@funindex is
@funindex eses
@funindex isis


Slovníček: @rglos{sharp}, @rglos{flat}, @rglos{double sharp},
@rglos{double flat}, @rglos{accidental}.

Předznamenání @notation{křížku}@footnote{V německém hovorovém jazyku
se předznamenání (das Versetzungszeichen) často říká předznamenání (Vorzeichen). Do češtiny se překládá stejně. V této příručce
se však rozlišuje mezi předznamenáním jako obecným udáním tóniny
a předznamenáními (posuvkami), jež se objevují přímo v notovém textu. V angličtině jsou obojí značky odlišeny tím, že pro stanovení tóniny se používá slova key signature, což se překládá jako předznamenání, a pro předznamenání na různých místech přímo v notovém zápisu má angličtina výraz accidental, což se překládá jako posuvka.} se zadává tím, že se k názvu noty připojí
@q{is}, předznamenání  @notation{bé}
se provede připojením @q{es}. Logicky se potom
 @notation{dvojitý křížek} nebo @notation{dvojité bé} zapíše připojením
@q{isis} nebo @q{eses}. Tato skladba odpovídá zvyklosti prostředí
českého jazyka, a tudíž není pro české uživatele žádným problémem.
Je ovšem možné používat název pro
@notation{předznamenání} v jiných jazycích.
Podívejte se na @ruser{Označení not v jiných jazycích}.

@lilypond[verbatim,quote,relative=2]
cis4 ees fisis, aeses
@end lilypond


@subheading Označení tóniny (předznamenání)

@cindex Tónina, nastavení
@cindex Předznamenání
@cindex Dur
@cindex Moll
@cindex Předznamenání (posuvky) a předznamenání (tónina)
@cindex Obsah a zobrazení
@cindex Zobrazení a obsah

@funindex \key
@funindex key
@funindex \major
@funindex major
@funindex \minor
@funindex minor

Slovníček: @rglos{key signature}, @rglos{major},
@rglos{minor}.

@notation{Tónina} díla se vytvoří příkazem
@code{\key}, který je následován označením noty a
@code{\major} (pro Dur) nebo @code{\minor}
(pro moll).

@lilypond[verbatim,quote,relative=2]
\key d \major
a1 |
\key c \minor
a1 |
@end lilypond

@smallspace

@subheading Varování: označení tóniny a výšky tónů

Slovníček: @rglos{accidental}, @rglos{key signature},
@rglos{pitch}, @rglos{flat}, @rglos{natural}, @rglos{sharp},
@rglos{transposition}, @rglos{Pitch names}.

Aby se určilo, zda se má předznamenání objevit před určitou notou,
zkoumá LilyPond výšky not a tóninu. Tónina
ovlivňuje jen @emph{otisknutá} předznamenání, nikoli
skutečné výšky tónů! Tato zvláštnost se na začátku jeví
často jako matoucí, takže je zde sledována důkladněji.

LilyPond přísně rozlišuje mezi hudebním obsahem a
sazbou. Alterace (@notation{bé},
@notation{křížek} nebo @notation{odrážka}) jedné noty kromě toho
náleží k výšce tónu, a je proto hudebním obsahem.
Zda se předznamenání (posuvka: čili @emph{otisknutý} křížek, bé
nebo odrážka) objeví před odpovídající notou,
je věcí sazby (úpravy). Úprava je něčím, co poslouchá určitá pravidla,
takže předznamenání (posuvky)
jsou sázena automaticky podle těchto pravidel. Výšky tónů ve
vašich notách jsou uměleckým dílem, a tak nebudou přidávány automaticky.
Nerozhoduje se automaticky, kde se objeví, a musíte zadat tón,
který chcete @emph{slyšet}.

V tomto příkladu

@lilypond[verbatim,quote,relative=2]
\key d \major
cis4 d e fis
@end lilypond

@noindent
nemá předznamenání žádná z not, přesto musí být ve zdrojovém textu
zapsáno @q{is} pro @code{cis} a @code{fis}.

Kód @q{bé} (podle holandského způsobu označování not se H sází
@code{b}) tedy neznamená: @qq{Nakresli jednu černou tečku
na prostřední linku notové osnovy.} Přesněji řečeno to znamená:
 @qq{Zde se má vysázet nota s výškou tónu H.}
V tónině As Dur @emph{dostane} předznamenání (posuvku):


@lilypond[verbatim,quote,relative=2]
\key aes \major
aes4 c b c
@end lilypond

Zapsat všechna tato předznamenání výslovně, možná znamená o něco
více písemné práce, má to ale tu velkou výhodu, že
@notation{transpozice}, převod, se dělá mnohem snadněji, a že
tisk předznamenání (posuvek) se může uskutečnit podle rozdílných
pravidel. Podívejte se na
@ruser{Automatické předznamenání} na několik příkladů, jak mohou být
předznamenání (posuvky) na základě různých pravidel vytisknuta.


@seealso
Doporučení pro notový zápis:
@ruser{Označení not v jiných jazycích},
@ruser{Předznamenání},
@ruser{Automatické předznamenání},
@ruser{Označení tóniny}.


@node Ligatury a legatové obloučky
@subsection Ligatury a legatové obloučky
@translationof Ties and slurs

@cindex Legatové obloučky
@cindex Oblouček, legato
@cindex Ligatury
@cindex Frázovací obloučky
@cindex Legatové obloučky, frázování

@funindex ~
@funindex ( ... )
@funindex \( ... \)


@subheading Ligatury

Slovníček: @rglos{tie}.

@notation{Ligatura} se zapíše tak, že se k první z not, které se mají
spojit, připojí vlnovka @code{~}.

@lilypond[verbatim,quote,relative=2]
g4~ 4 c2~ | 4~ 8 a~ 2
@end lilypond


@subheading Legatové obloučky

Slovníček: @rglos{slur}.

@notation{Legatový oblouček} je oblouček, který se rozprostírá přes
více not. Jeho počáteční a koncová nota se značí
@q{(} popřípadě @q{)}.

@lilypond[verbatim,quote,relative=2]
d4( c16) cis( d e c cis d) e( d4)
@end lilypond

@subheading Frázovací obloučky

Slovníček: @rglos{slur}, @rglos{phrasing}.

Obloučky, které označují delší jednotky frázování
(frázovací obloučky), se zadávají pomocí @code{\(} a
@code{\)}.  Současně se mohou vyskytovat jak legatové obloučky
tak frázovací obloučky, ale nemůže se současně dát více než právě
jeden legatový oblouček a jeden frázovací oblouček.

@lilypond[verbatim,quote,relative=2]
g4\( g8( a) b( c) b4\)
@end lilypond

@sp 1

@cindex Ligatura proti legatovému obloučku
@subheading Varování: ligatury nejsou legatovými obloučky

Slovníček: @rglos{articulation}, @rglos{slur}, @rglos{tie}.

Legatový oblouček vypadá jako @rglos{tie}, má ale jiný význam.
Ligatura prodlužuje pouze předcházející notu a může se
také používat jen u dvou not, jež mají stejnou výšku tónu.
Legatové obloučky proti tomu ukazují artikulaci not a mohou být
zapsány pro větší skupiny not. Ligatury a legatové obloučky mohou
být naskládány do sebe.

@lilypond[verbatim,quote,relative=2]
c4~( c8 d~ 4 e)
@end lilypond


@seealso
Doporučení pro notový zápis:
@ruser{Ligatury},
@ruser{Legatové obloučky},
@ruser{Obloučky frázování}.


@node Artikulační znaménka a hlasitost
@subsection Artikulační znaménka a hlasitost
@translationof Articulation and dynamics

@subheading Artikulační znaménka

@cindex Artikulace
@cindex Důrazy
@cindex Staccato

Slovníček:
@rglos{articulation}.

Běžná @notation{artikulační znaménka} mohou být zadána pomocí
doplnění minus (@q{-}) a odpovídajícího znaménka:

@lilypond[verbatim,quote,relative=2]
c4-^ c-+ c-- c-!
c4-> c-. c2-_
@end lilypond

@subheading Prstoklad

@cindex Prstoklad

@funindex ^
@funindex _

Slovníček: @rglos{fingering}.

Stejným způsobem lze přidat označení prstokladu tím,
že se po minus (@q{-}) zapíše číslo:

@lilypond[verbatim,quote,relative=2]
c4-3 e-5 b-2 a-1
@end lilypond

Artikulační znaménka a prstoklady jsou obvykle umísťovány
automaticky, ale jejich místo lze zadat pomocí
znaku @q{^} (nahoru) nebo @q{_} (dolů) namísto znaku minus.
K jedné notě je možné připojit i více
artikulačních znamének.
Většinou ale najde LilyPond sám tu nejlepší možnost,
jak se mají artikulační znaménka umístit.

@lilypond[verbatim,quote,relative=2]
c4_-^1 d^. f^4_2-> e^-_+
@end lilypond

@subheading Dynamika

@cindex Dynamika
@cindex Crescendo
@cindex Hlasitost
@cindex Decrescendo

@funindex \f
@funindex \ff
@funindex \mp
@funindex \p
@funindex \mf
@funindex \pp
@funindex \<
@funindex <
@funindex \>
@funindex >
@funindex \!
@funindex !

Slovníček:
@rglos{dynamics},
@rglos{crescendo},
@rglos{decrescendo}.

Dynamika (značky určující hlasitost) se do díla zadává tím, že se k notě
připojují značky (s obráceným lomítkem):

@lilypond[verbatim,quote,relative=2]
c4\ff c\mf c\p c\pp
@end lilypond

@notation{Crescendo} a @notation{decrescendo} začínají
příkazem @code{\<}
případně @code{\>}.  Další absolutní značka určující hlasitost,
například @code{\f}, (de)crescendo ukončuje.
Může se přesně ukončit i příkazem @code{\!}.

@lilypond[verbatim,quote,relative=2]
c4\< c\ff\> c c\!
@end lilypond


@seealso
Doporučení pro notový zápis:
@ruser{Artikulační znaménka a ozdoby},
@ruser{Příkazy pro prstoklad},
@ruser{Dynamika}.


@node Přidání textu
@subsection Přidání textu
@translationof Adding text

@cindex Text, přidání
@cindex Vložení textu
@cindex Přidání textu
@cindex Textový popis
@cindex markup

@funindex  \markup
@funindex markup

Text můžete do notového zápisu vložit následujícím způsobem:

@lilypond[verbatim,quote,relative=2]
c2^"espr" a_"legato"
@end lilypond

Dodatečné formátování lze nasadit, když použijete příkaz
@code{\markup}:

@lilypond[verbatim,quote,relative=2]
c2^\markup { \bold espr }
a2_\markup {
  \dynamic f \italic \small { 2nd } \hspace #0.1 \dynamic p
}
@end lilypond


@seealso
Doporučení pro notový zápis:
@ruser{Zadání textu}.


@node Automatické a ruční trámce
@subsection Automatické a ruční trámce
@translationof Automatic and manual beams

@cindex Trámce, ruční
@cindex automatické trámce
@cindex Trámce, automatické
@cindex ruční trámce

@funindex [ ... ]
@funindex [
@funindex ]
@funindex \autoBeamOff
@funindex autoBeamOff
@funindex \autoBeamOn
@funindex autoBeamOn

Všechny @notation{trámce} se zapisují automaticky:

@lilypond[verbatim,quote,relative=2]
a8 ais d ees r d c16 b a8
@end lilypond

@noindent
Když nejsou tyto automaticky zapisované trámce chtěné,
mohou být změněny ručně. Když se musí tu a tam opravit
jen jeden trámec, dostane nota, na níž trámec začíná
@q{[} (AltGr+8), a ta, na níž má končit, dostane
@q{]} (AltGr+9).

@lilypond[verbatim,quote,relative=2]
a8[ ais] d[ ees r d] c16 b a8
@end lilypond

Když chcete automatické trámce vypnout úplně nebo
pro delší část, používáte
příkaz @code{\autoBeamOff}, abyste trámce vypnul,
a @code{\autoBeamOn}, abyste je opět zapnul.

@lilypond[verbatim,quote,relative=2]
\autoBeamOff
a8 c b4 d8. c16 b4 |
\autoBeamOn
a8 c b4 d8. c16 b4 |
@end lilypond


@seealso
Doporučení pro notový zápis:
@ruser{Automatické trámce},
@ruser{Ruční trámce}.


@node Dodatečné rytmické příkazy
@subsection Dodatečné rytmické příkazy
@translationof Advanced rhythmic commands

@subheading Předtaktí

@cindex Předtaktí
@funindex \partial
@funindex partial

@notation{Předtaktí} se zadává příkazem @code{\partial}.
Potom následuje délka předtaktí: @code{\partial 4}
znamená jednu čtvrťovou notu předtaktí a @code{\partial 8} jednu osminovou notu.

@lilypond[verbatim,quote,relative=2]
\partial 8 f8 |
c2 d |
@end lilypond


@subheading Jiná rytmická rozdělení

@cindex N-toly
@cindex Trioly
@cindex Rytmická rozdělení

@funindex \times
@funindex times

Slovníček: @rglos{note value}, @rglos{triplet}.

@notation{Trioly} a @notation{n-toly} se vytváří příkazem
@code{\times}. Potřeba jsou k tomu dva argumenty:
zlomek a noty, na něž se odvolává.
Trvání not se zlomkem znásobuje.
V jedné triole trvají noty 2/3 jejich zapsané délky,
takže triola má 2/3 jako svůj zlomek:

@lilypond[verbatim,quote,relative=2]
\tuplet 3/2 { f8 g a }
\tuplet 3/2 { c8 r c }
\tuplet 3/2 { f,8 g16[ a g a] }
\tuplet 3/2 { d4 a8 }
@end lilypond

@subheading Ozdoby

@cindex Ozdoby
@cindex Příraz
@cindex Prodleva

@funindex \grace
@funindex grace
@funindex \acciaccatura
@funindex acciaccatura
@funindex \appoggiatura
@funindex acciaccatura

Slovníček: @rglos{grace notes}, @rglos{acciaccatura},
@rglos{appoggiatura}.

Melodické ozdoby se zadávají příkazem @code{\grace}, ačkoli se také dají
vytvářet uvozením hudebního výrazu příkazem @code{\appoggiatura} (dlouhý
příraz, prodleva) a @code{\acciaccatura} (příraz, krátká appogiatura).

@lilypond[verbatim,quote,relative=2]
c2 \grace { a32 b } c2 |
c2 \appoggiatura b16 c2 |
c2 \acciaccatura b16 c2 |
@end lilypond


@seealso
Doporučení pro notový zápis:
@ruser{Ozdoby},
@ruser{Jiná rytmická rozdělení},
@ruser{Předtaktí}.


@node Více not najednou
@section Více not najednou
@translationof Multiple notes at once

V této kapitole bude ukázáno, jak lze zapsat více než jednu
notu k stejné době: v různých notových osnovách
pro různé nástroje nebo pro jeden nástroj (např. klavír)
a v akordech.

Vícehlasostí (polyfonie) se v hudbě nazývá výskyt více než jednoho
hlasu v jednom díle.
Vícehlasost (polyfonie) ovšem pro LilyPond znamená
výskyt více než jednoho hlasu ve stejné notové osnově.

@menu
* Vysvětlení hudebních výrazů::
* Více notových osnov::
* Seskupení notových osnov::
* Spojení not do akordů::
* Vícehlasost v jedné notové osnově::
@end menu


@node Vysvětlení hudebních výrazů
@subsection Vysvětlení hudebních výrazů
@translationof Music expressions explained

@cindex Hudební výraz
@cindex Výraz, hudební
@cindex složený hudební výraz

Ve zdrojových souborech LilyPondu se hudba znázorňuje
pomocí @emph{hudebních výrazů}. Jedna nota je jedním hudebním
výrazem.

@lilypond[verbatim,quote,relative=2]
a4
@end lilypond

Skupina not uvnitř závorek tvoří nový výraz.
Tento je nyní @emph{složeným hudebním výrazem}.
Zde byl jeden takový složený hudební výraz
se dvěmi notami vytvořen:

@lilypond[verbatim,quote,relative=2]
{ a4 g4 }
@end lilypond

Když je skupina hudebních výrazů (například not)
zapsána do složených závorek, znamená to, že jsou
seřazeny v řadě (tj. každý následuje po předchozím). Výsledkem je další
hudební výraz.

@lilypond[verbatim,quote,relative=2]
{ { a4 g } f4 g }
@end lilypond


@subheading Obdoba: matematické výrazy

Uspořádání výrazů pracuje podobně jako matematické
rovnice. Delší rovnice vzejde ze spojení
menších rovnic. Takovým rovnicím se říká též
výraz a jejich vymezení je rekurzivní,
takže mohou být vytvářeny jakkoli složité a dlouhé výrazy.
Přibližně tak, jak je to zde:

@example
1

1 + 2

(1 + 2) * 3

((1 + 2) * 3) / (4 * 5)
@end example

Je to řada (matematických) výrazů, v nichž je každý
výraz obsažen v následujícím (větším). Nejjednoduššími výrazy
jsou čísla, a větší vznikají spojením
výrazů za pomoci operátorů (jako @q{+},
@q{*} a @q{/}) stejně jako závorky. Přesně jako matematické
výrazy mohou být i hudební výrazy jakkoli hluboce členité.
Je to potřeba pro složitou hudbu s mnoha hlasy.


@subheading Souběžné hudební výrazy: více notových osnov

@cindex více notových osnov
@cindex Notové osnovy, více
@cindex Polyphonie
@cindex Vícehlasost
@cindex paralelní výrazy
@cindex Výrazy, paralelní
@cindex relativní noty a souběžně probíhající hudba
@cindex současné noty a relativní režim

@funindex <<
@funindex >>
@funindex << ... >>

Slovníček: @rglos{polyphony}.


S touto technikou lze @notation{vícehlasou} hudbu zapisovat.
Hudební výrazy jsou jednoduše spojeny jako současně probíhající, a
v důsledku toho jsou současně zapsány jako vlastní
hlasy ve stejné notové osnově. Pro označení toho, že se dva hlasy mají
hrát ve stejnou dobu, jednoduše zadejte souběžné spojení hudebních výrazů
Je jen třeba vložit znak pro spojení.
Souběžně jsou hudební výrazy spojeny tak, že jsou uzavřeny uvnitř
@code{<<} a @code{>>}. V následujícím příkladu jsou souběžně spojeny
tři výrazy (každý obsahuje dvě oddělené noty):

@lilypond[verbatim,quote]
\relative c'' {
  <<
    { a2 g }
    { f2 e }
    { d2 b }
  >>
}
@end lilypond

Ještě je třeba poznamenat, že jsme zde pro každou úroveň uvnitř
zdrojového souboru zapsali jiné odsazení. Pro LilyPond nehraje
žádnou úlohu, kolik prázdných znaků je na začátku řádku,
ale pro člověka je volikou pomocí, když hned vidí, které
části zdrojového textu patří dohromady.

@warning{Každá nota v souboru se vztahuje k předcházející
a nesouvisí s dvoučárkovaným C (@code{c''}), které je zadáno v
příkazu @code{@bs{}relative}. Závorky na to nemají žádný
vliv.}


@subheading Souběžné hudební výrazy: jedna notová osnova

Aby určil počet notových osnov, provádí LilyPond rozbor
začátku prvního výrazu. Když se zde nachází jednotlivá nota,
zapíše se pouze jedna notová osnova, když se jedná o souběžné seřazení
výrazů, zapíše se více než jedna notová osnova. Následující
příklad začíná jednou notou:


@lilypond[verbatim,quote]
\relative c'' {
  c2 <<c e>> |
  << { e f } { c <<b d>> } >> |
}
@end lilypond


@node Více notových osnov
@subsection Více notových osnov
@translationof Multiple staves

@cindex více osnov
@cindex Osnovy, více
@cindex Prostředí
@cindex Prostředí notového zápisu

@funindex \new Staff
@funindex new Staff
@funindex Staff
@funindex \new
@funindex new
@funindex Score
@funindex Voice
@funindex Lyrics
@funindex ChordNames

Jak jsme viděli ve @ref{Vysvětlení hudebních výrazů,,vysvětlení hudebních výrazů}, jsou
zdrojové soubory LilyPondu sestaveny z hudebních výrazů.
Když zadání not začíná souběžným výrazem, vytváří se více notových
osnov. Je ale jistější a jednodušší
porozumět tomu, kdy jsou tyto notové osnovy vytvářeny otevřeně.

Aby se napsala více než jedna notová osnova, je ke každému notovému výrazu,
který má stát ve vlastní notové osnově, vpředu připojen příkaz
@code{\new Staff}. Tyto součásti @code{Staff} (anglické slovo pro notovou
osnovu) jsou potom uspořádány souběžně se znaky @code{<<} a
@code{>>}:

@lilypond[verbatim,quote]
\relative c'' {
  <<
    \new Staff { \clef "treble" c4 }
    \new Staff { \clef "bass" c,,4 }
  >>
}
@end lilypond

Příkaz @code{\new} začíná nové @qq{prostředí notového zápisu}.
Prostředím notového zápisu je prostředí, v němž jsou vykládány
hudební události (jako jsou noty nebo příkaz pro @code{\clef} (klíč)).
Pro jednoduché části jsou tato prostředí vytvářena automaticky.
U složitější hudby je ale nejlepší tato prostředí vytvořit otevřeně.

Jsou různé typy prostředí. @code{Score} (notový zápis),
@code{Staff} (notová osnova) a @code{Voice} (hlas)
zpracovávají zadání not, zatímco prostředí @code{Lyrics}
(text) se používá k zapisování textů písní a
prostředí @code{ChordNames} (názvy akordů) se používá
k zapisování značek akordů.

Tím, že se @code{\new} zapíše před nějakým hudebním výrazem,
se vytvoří větší výraz. V tomto smyslu skladba příkazu
@code{\new} připomíná znaménko minus v matematice.
Tak jako @math{(4+5)} je jeden výraz, který byl pomocí
@math{-(4+5)} rozšířen do většího výrazu,
jsou také hudební výrazy rozšiřovány pomocí příkazu @code{\new}.

Označení taktů, která jsou zadána v jedné notové osnově, se
projevují u všech ostatních notových osnov. Předznamenání (údaj o
tónině) v jedné notové osnově oproti tomu @emph{neovlivňuje} tóninu
jiných notových osnov. Toto počínání je založeno na tom, že
notové zápisy s převeditelnými nástroji jsou častější než
notové zápisy s rozdílnými druhy taktů.


@lilypond[verbatim,quote]
\relative c'' {
  <<
    \new Staff { \clef "treble" \key d \major \time 3/4 c4 }
    \new Staff { \clef "bass" c,,4 }
  >>
}
@end lilypond


@node Seskupení notových osnov
@subsection Seskupení notových osnov
@translationof Staff groups

@cindex Akoláda
@cindex Osnova pro klavír
@cindex Notová osnova pro klavír
@cindex Notová osnova pro sbor
@cindex Notový zápis pro sbor
@cindex Změna osnovy, ruční
@cindex Změna mezi osnovami, ruční
@cindex Změna hlasu mezi osnovami, ruční
@cindex Sborový notový zápis
@cindex Klavírní osnova
@cindex Notový zápis

@funindex PianoStaff
@funindex GrandStaff
@funindex ChoirStaff

Slovníček: @rglos{brace}.

Hudba pro klavír se obvykle zapisuje do dvou notových osnov,
které jsou spojeny @notation{složenými závorkami}
(akoláda). Pro vytvoření takové notové osnovy si člověk počíná
podobně jako v příkladu z
@ref{Více notových osnov,,více notových osnov}, jenže celý výraz je
nyní vložen do prostředí @code{PianoStaff}.

@example
\new PianoStaff <<
  \new Staff @dots{}
  \new Staff @dots{}
>> >>
@end example

Zde je jeden malý příklad:

@lilypond[verbatim,quote]
\relative c'' {
  \new PianoStaff <<
    \new Staff { \time 2/4 c4 e | g g, | }
    \new Staff { \clef "bass" c,,4 c' | e c | }
  >>
}
@end lilypond

Jiné typické skupiny notových osnov je možné vytvořit příkazy
@code{\new StaffGroup} pro orchestrální sazby a
@code{\new ChoirStaff} pro sborové notové osnovy.
Každá z těchto skupin notových osnov vytváří nové prostředí,
které se stará o to, aby závorky byly vytvořeny na začátku
notové osnovy, a který dodatečně rozhoduje i o tom,
zda jsou taktové čáry zapsány jen na notové osnově
nebo také mezi notovými osnovami.


@seealso
Doporučení pro notový zápis:
@ruser{Klávesové nástroje a jiné nástroje s více notovými osnovami},
@ruser{Nechat ukázat osnovy}.


@node Spojení not do akordů
@subsection Spojení not do akordů
@translationof Combining notes into chords

Slovníček: @rglos{chord}

@cindex Akordy
@cindex Délka not v akordech

@funindex <
@funindex >
@funindex < ... >

Viděli jsme již nahoře, jak se dají vytvářet akordy tím, že
jsou uzavřeny  dvojitými špičatými závorkami, a tak označeny jako
současně zaznívající. Obvyklým způsobem notového zápisu
akordů je ale jejich uzavření
@emph{jednoduchými} špičatými závorkami (@q{<} a @q{>}).
Dávejte pozor si na to, že všechny noty jednoho akordu
musejí mít stejnou dobu trvání a že tato doba trvání
se zapisuje po uzavírajících závorkách.

@lilypond[verbatim,quote,relative=2]
r4 <c e g> <c f a>2
@end lilypond

Akordy jsou v základě rovnocenné s jednoduchými notami:
téměř všechny značky, které je možné připojit k jednoduchým notám,
se dají připojit i k akordům.
Tak je možné s akordy spojit značky, jako jsou trámce nebo obloučky.
Avšak musí se zapsat vně špičatých závorek.

@lilypond[verbatim,quote,relative=2]
<c e g>8[ <c f a> <c e g> <c f a>] <c e g>\>[ <c f a> <c f a> <c e g>]\! |
r4 <c e g>8.\p <c f a>16( <c e g>4-. <c f a>) |
@end lilypond

@seealso
Doporučení pro notový zápis:
@ruser{Akordové noty}.


@node Vícehlasost v jedné notové osnově
@subsection Vícehlasost v jedné notové osnově
@translationof Single staff polyphony

@cindex Vícehlasost
@cindex více hlasů
@cindex Hlasy, více v jedné notové osnově
@cindex neviditelné noty
@cindex Zástupné noty
@cindex Noty, neviditelné

@funindex << ... \\ ... >>
@funindex <<
@funindex \\
@funindex >>

Vícehlasý notový zápis v LilyPondu není těžký, používá však určité
pojmy, o kterých se zde ještě nepojednávalo a které zde neměly být
vysvětleny. Místo toho následující části do těchto pojmů uvádějí
a podrobně je vysvětlují.


@seealso
Příručka k učení se:
@ref{Hlasy obsahují noty}.

Doporučení pro notový zápis:
@ruser{Současně se objevující noty}.


@node Písničky
@section Písničky
@translationof Songs

@cindex Text písně, zápis

@funindex \addlyrics
@funindex addlyrics

V této kapitole je laskavý čtenář uveden do spojení not s textem
a je ukázáno, jak se vytváří jednodušší listy s písničkami.

@menu
* Zápis jednoduchých písní::
* Vyrovnání textu s melodií::
* Text pro více osnov::
@end menu


@node Zápis jednoduchých písní
@subsection Zápis jednoduchých písní
@translationof Setting simple songs

@cindex Text
@cindex Písničky
@cindex Text písně

@funindex \addlyrics
@funindex addlyrics

Slovníček: @rglos{lyrics}.

Zde je začátek jednoduché dětské písně,
@notation{Dívky a chlapci jdou ven, aby si hráli}:

@lilypond[verbatim,quote]
\relative c'' {
  \key g \major
  \time 6/8
  d4 b8 c4 a8 | d4 b8 g4
}
@end lilypond

K těmto notám je možné přidat text tím, že obojí
je spojeno příkazem @code{\addlyrics}. Text
se zadá tak, že každá slabika je oddělena prázdným znakem.

@c KEEP LY
@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \major
    \time 6/8
    d4 b8 c4 a8 | d4 b8 g4
  }
  \addlyrics {
    Dívky a chlapci jdou | ven, aby si hráli,
  }
>>
@end lilypond

@warning{Je velmi důležité, aby byla poslední slabika oddělena prázdným
znakem nebo novým řádkem od uzavírajících složených závorek.
Pokud to tak uděláno není, je závorka vykládána jako část
slabiky, což vede k zvláštní chybě.  Podívejte se také na
@rprogram{Apparent error in ../ly/init.ly}.}

Jak noty tak také text jsou pokaždé orámovány složenými
závorkami a celý výraz je umístěn mezi
@w{@code{<< ... >>}}. Tím se zaručuje, že
text a noty jsou zapsány současně.


@node Vyrovnání textu s melodií
@subsection Vyrovnání textu s melodií
@translationof Aligning lyrics to a melody

@cindex Text písně, vyrovnání
@cindex Vyrovnání textu písně
@cindex Slova s více slabikami
@cindex více slabik v textu písně
@cindex Melisma
@cindex Podtržení
@cindex Spojovník
@cindex Vyplňovací čára

Slovníček: @rglos{melisma}, @rglos{extender line}.

Další řádek písně pro děti zní:
@notation{A ten měsíc svítí tak jasně jako den}. Zapsaná vypadá
takto:

@c KEEP LY
@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \major
    \time 6/8
    d4 b8 c4 a8 | d4 b8 g4 g8 |
    a4 b8 c b a | d4 b8 g4. |
  }
  \addlyrics {
    Dívky a chlapci jdou | ven si hrát,
    A | měsíc svítí tak | jasně jako den; |
  }
>>
@end lilypond

V anglickém originále je to:

@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \major
    \time 6/8
    d4 b8 c4 a8 | d4 b8 g4 g8 |
    a4 b8 c[ b] a | d4 b8 g4. |
  }
  \addlyrics {
    Girls and boys come | out to play,
    The | moon doth shine _ as | bright as day; |
  }
>>
@end lilypond

Když se kód hořejšího příkladu sestaví, měla by se ve výstupu
konzole/v souboru se zápisem objevit podobná varování:

@example
song.ly:12:29: warning: barcheck failed at: 5/8
    The | moon doth shine as
                             | bright as day; |
song.ly:12:46: warning: barcheck failed at: 3/8
    The | moon doth shine as | bright as day;
                                              |
@end example

Toto je dobrý příklad užití přezkoušení taktů.  Zde máme český překlad, ale když se na noty  s anglickým původním textem podíváme
pečlivěji, je nám jasné, že nový textový řádek není srovnán s notami
správně.  Slova @notation{měsíc} a @notation{svítí} (v angličtině jsou tu slovní obrat "moon doth" a slovo "shine"), by se měla
zpívat na dvě noty, ne na jednu.  Říká se tomu @notation{melisma}, jednoslabičný
text pro více not, řada tónů zpívaná na jednu slabiku textu.  Je více
možností, jak jednu slabiku prodloužit přes více not.  Tou nejjednodušší
je zapsat kolem dotčených not legatový oblouček. Na
podrobnosti se podívejte v části @ref{Ligatury a legatové obloučky}.

@c KEEP LY
@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \major
    \time 6/8
    d4 b8 c4 a8 | d4 b8 g4 g8 |
    a4 b8 c( b) a | d4 b8 g4. |
  }
  \addlyrics {
    Dívky a chlapci jdou | ven si hrát,
    A | měsíc svítí tak | jasně jako den; |
  }
>>
@end lilypond

Slova nyní jdou správně s notami,
ale automatický trámec pro noty u
@notation{svítí tak}, nevypadá správně.
Můžeme to opravit tak, že délku trámce vymezíme ručně,
aby odpovídala běžnému způsobu notového zápisu zpěvu.
Na podrobnosti se podívejte v části @ref{Automatické a ruční trámce}.

@c KEEP LY
@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \major
    \time 6/8
    d4 b8 c4 a8 | d4 b8 g4 g8 |
    a4 b8 c([ b]) a | d4 b8 g4. |
  }
  \addlyrics {
    Dívky a chlapci jdou | ven si hrát,
    A | měsíc svítí tak | jasně jako den; |
  }
>>
@end lilypond

Jinak může být melisma zapsána i v textu tak, že
pro každou notu, která se má přeskočit, se v textu zapíže
podtržítko @code{_}:

@c KEEP LY
@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \major
    \time 6/8
    d4 b8 c4 a8 | d4 b8 g4 g8 |
    a4 b8 c[ b] a | d4 b8 g4. |
  }
  \addlyrics {
    Dívky a chlapci jdou | ven si hrát,
    A | měsíc svítí _ tak | jasně jako den; |
  }
>>
@end lilypond

Když se poslední slabika slova rozprostírá přes více not nebo přes
jednu velmi dlouhou notu, zapisuje se obvykle vyplňovací čára,
která se rozprostírá přes všechny noty, které ke slabice
patří. Tato vyplňovací čára se zapíše pomocí dvou podtržítek @code{__}.
Zde je příklad prvních tří taktů z
@notation{Didonina nářku},
Purcellova díla @notation{Dido a Æneas}@footnote{Když jsem | položen,
jsem | položen __ na | zemi.}:

@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key g \minor
    \time 3/2
    g2 a bes | bes2( a) b2 |
    c4.( bes8 a4. g8 fis4.) g8 | fis1
  }
  \addlyrics {
    When I am | laid,
    am | laid __ in | earth,
  }
>>
@end lilypond

Žádný z dosavadních příkladů doposud nepoužil slova, jež by byla
delší než jedna slabika.
Taková slova se obvykle rozdělují na více
not, jedna slabika na notu, se spojovníky mezi slabikami.
Tyto slabiky se zapisují pomocí dvou znamének minus a
jsou LilyPondem napsány jako vystředěný spojovník mezi dvěma slabikami.
Zde je příklad, který ukazuje tento a všechny další triky,
jimiž lze vyrovnat text s notami:

@c no ragged-right here because otherwise the hyphens get lost,
@c but the example is long enough to avoid looking strange.
@lilypond[verbatim,quote,noragged-right]
<<
  \relative c' {
    \key g \major
    \time 3/4
    \partial 4
    d4 | g4 g a8( b) | g4 g b8( c) |
    d4 d e | c2
  }
  \addlyrics {
    A -- | way in a __ | man -- ger,
    no __ | crib for a | bed, __
  }
>>
@end lilypond

Některé texty, obzvláště v jazyce italském, potřebují opak:
více než jedna slabika se musí zapsat k jedné notě.
To je možné tak, že slabiky jsou spřáhnuty dohromady pomocí
jednoho podtržení @code{_}. Mezi tím se nesmí nacházet žádné prázdné
znaky, nebo tím, že se
rozhodující slabiky zapíší v uvozovkách @code{"}.
Zde je příklad z opery @notation{Figaro} od Rossiniho, kde se slabika
@notation{al} musí zazpívat na té samé notě @notation{go} slova @notation{Largo}
ve Figarově árii @notation{Largo al factotum}.

@c no ragged-right here because otherwise the hyphens get lost,
@c but the example is long enough to avoid looking strange.
@lilypond[verbatim,quote,noragged-right]
<<
  \relative c' {
    \clef "bass"
    \key c \major
    \time 6/8
    c4.~ 8 d b | c8([ d]) b c d b | c8
  }
  \addlyrics {
    Lar -- go_al fac -- | to -- tum del -- la cit -- | tà
  }
>>
@end lilypond


@seealso
Doporučení pro notový zápis:
@ruser{Notový zápis zpěvu}.


@node Text pro více osnov
@subsection Text pro více osnov
@translationof Lyrics to multiple staves

@cindex Text písně ve více osnovách
@cindex Více osnov a text písně

Lze použít jednoduché řešení s @code{\addlyrics}, aby byl text
zapsán v jedné nebo ve více notových osnovách. Zde je příklad z
Händelova díla @notation{Judas Maccabeus}:

@lilypond[verbatim,quote]
<<
  \relative c'' {
    \key f \major
    \time 6/8
    \partial 8
    c8 | c8([ bes]) a a([ g]) f | f'4. b, | c4.~ 4
  }
  \addlyrics {
    Let | flee -- cy flocks the | hills a -- | dorn, __
  }
  \relative c' {
    \key f \major
    \time 6/8
    \partial 8
    r8 | r4. r4 c8 | a'8([ g]) f f([ e]) d | e8([ d]) c bes'4
  }
  \addlyrics {
    Let | flee -- cy flocks the | hills a -- dorn,
  }
>>
@end lilypond

Ale notové zápisy, jež jsou složitější, než je tento příklad,
se lépe zapisují tak, že se stavba osnov oddělí od not
a textu zpěvu pomocí proměnných. Používání proměnných
se vysvětluje v části @ref{Pořádání děl pomocí proměnných}.


@seealso
Doporučení pro notový zápis:
@ruser{Notový zápis zpěvu}.


@node Poslední úpravy
@section Poslední úpravy
@translationof Final touches

Toto je poslední kapitola cvičení. Zde se má předvést,
jak se u jednoduchých děl uplatňují poslední úpravy.
Současně slouží jako úvod pro zbytek příručky.

@menu
* Pořádání děl pomocí proměnných::
* Přidání názvu::
* Absolutní označení not::
* Po cvičení::
@end menu


@node Pořádání děl pomocí proměnných
@subsection Pořádání děl pomocí proměnných
@translationof Organizing pieces with variables

@cindex Proměnná
@cindex Značka
@cindex Makro
@cindex Přidělit proměnné
@cindex Používání proměnných
@cindex Přidělení proměnných
@cindex Proměnná, povolené znaky
@cindex Znaky, povolené v proměnných

Když se všechny ty složky, o kterých se mluvilo, spojí ve větší
soubory, stanou se i hudební výrazy o hodně většími.
Ve vícehlasých souborech s mnoha osnovami to může vypadat velmi
neuspořádaně. Zmatek je ale možné velmi zřetelně omezit,
když se vymezí a používají @code{Proměnné}.

Proměnné (označované i jako značky nebo makra)
mohou pojmout část not. Vymezují se tak, jak je popsáno následně:

@example
označenéNoty = @{ @dots{} @}
@end example

Obsah hudebního výrazu @code{označenéNoty} se pak může opět použít
později tím, že se před ně zapíše obrácené lomítko
(@code{\označenéNoty}), přesně tak, jak se to dělá u každého příkazu LilyPond.

@lilypond[verbatim,quote]
violin = \new Staff {
  \relative c'' {
    a4 b c b
  }
}

cello = \new Staff {
  \relative c {
    \clef "bass"
    e2 d
  }
}

{
  <<
    \violin
    \cello
  >>
}
@end lilypond

@noindent
V názvech proměnných mohou být použita jen písmena abecedy,
žádná čísla nebo čárky.

Proměnné se musejí vymezit @emph{před} vlastním hudebním
výrazem. Potom se ale mohou používat libovolně často, jakmile
už jednou byly vymezeny. Mohou být dokonce ustaveny, aby později
v souboru vytvořily novou proměnnou. Tím se dá písemná práce
ulehčit, když se skupiny not často opakují.

@lilypond[verbatim,quote]
tripletA = \tuplet 3/2 { c,8 e g }
barA = { \tripletA \tripletA \tripletA \tripletA }

\relative c'' {
  \barA \barA
}
@end lilypond

Tyto proměnné se dají používat i pro mnoho dalších předmětů,
například:

@example
Šířka = 4.5\cm
Name = "Tim"
aPětPapír = \paper @{ paperheight = 21.0 \cm @}
@end example

Podle souvislostí lze takovou značku používat na různých
místech. V následujícím příkladu je ukázáno použití
právě vymezené značky:

@example
\paper @{
  \aPětPapír
  line-width = \Šířka
@}

@{
  c4^\Name
@}
@end example



@node Přidání názvu
@subsection Přidání názvu
@translationof Adding titles

@cindex Název
@cindex header
@cindex Hlavička
@cindex Úvodní stránka

@funindex \header
@funindex header

Název, skladatel, číslo opusu a podobné údaje se vkládají
do prostředí @code{\header}. Toto prostředí se nachází mimo
hudební výrazy, většinou se prostředí
@code{\header} vkládá přímo do čísla verze.

@example
\version @w{"@version{}"}

\header @{
  title = "Symphony"
  composer = "Já"
  opus = "Op. 9"
@}

@{
  @dots{} Noty @dots{}
@}
@end example

Když je soubor přeložen, jsou název a hudební skladatel
nadepsáni nad noty. Více informací o úvodním listu se nachází
v kapitole @ruser{Vytvoření názvu}.


@node Absolutní označení not
@subsection Absolutní označení not
@translationof Absolute note names

@cindex Označení not
@cindex absolutní režim
@cindex absolutní hodnoty pro výšky tónů
@cindex Výšky tónů, absolutní hodnoty

Až doteď jsme vždy používali @code{\relative}, abychom určili výšky tónů.
To je nejjednodušší způsob zadávání u většiny not.
Je ale ještě jiná možnost, jak popsat výšky tónů: pomocí
absolutního označení.

Když se @code{\relative} vypustí, vykládají se všechny výšky tónů LilyPondu
jako absolutní hodnoty. @code{c'} je potom vždy jednočárkovaným
C, @code{b} je vždy malým h pod jednočárkovaným
C, a @code{g,} je vždy velkým G -- tedy notou
na poslední lince v basovém klíči.

@lilypond[verbatim,quote]
{
  \clef "bass"
  c'4 b g, g, |
  g,4 f, f c' |
}
@end lilypond

Zde je stupnice přes čtyři oktávy:

@lilypond[verbatim,quote]
{
  \clef "bass"
  c,4 d, e, f, |
  g,4 a, b, c |
  d4 e f g |
  a4 b c' d' |
  \clef "treble"
  e'4 f' g' a' |
  b'4 c'' d'' e'' |
  f''4 g'' a'' b'' |
  c'''1 |
}
@end lilypond

Jak můžete vidět, musí se napsat velmi mnoho odsuvníků (jednoduchých uvozovek),
když se melodie zapisuje v sopránovém klíči. Podívejte se například na
tento Mozartův zlomek:

@lilypond[verbatim,quote]
{
  \key a \major
  \time 6/8
  cis''8. d''16 cis''8 e''4 e''8 |
  b'8. cis''16 b'8 d''4 d''8 |
}
@end lilypond

Všechny tyto odsuvníky činí zdrojový text špatně čitelný a jsou
možným zdrojem chyb. Pomocí příkazu  @code{\relative} je tento příklad
mnohem jednodušeji čitelný:

@lilypond[verbatim,quote]
\relative c'' {
  \key a \major
  \time 6/8
  cis8. d16 cis8 e4 e8 |
  b8. cis16 b8 d4 d8 |
}
@end lilypond

Když člověk udělá chybu kvůli značce pro oktávu  (@code{'}
nebo @code{,}) v režimu  @code{\relative}, dá se najít velice
rychle, protože mnohé noty budou po sobě v nesprávné oktávě.
V absolutním režimu naproti tomu není jednotlivá chyba tak zřetelná,
a proto se nedá tak snadno najít.

Přese všechno je absolutní režim dobrý pro noty s velmi velkými
skoky a především pro počítačem vytvářené soubory LilyPondu.


@node Po cvičení
@subsection Po cvičení
@translationof After the tutorial

Když jste zvládli toto cvičení, měli byste se nejlépe sami
pokusit napsat několik kousků. Začněte s
@ref{Předlohy,,předlohami} a jednoduše do nich přidejte několik svých
not. Kdybyste potřeboval cokoliv, o čem se v cvičení nemluvilo,
podívejte se na část Doporučení k notovém zápisu, počínaje
@ruser{Hudební notový zápis,,hudebním notovým zápisem}.
Pokud budete chtít napsat noty pro nějaký nástroj nebo
soubor, pro který není žádná předloha, podívejte se na
@ref{Rozšíření příkladů}.

Když už jste napsal několik krátkých skladeb, přečtěte si
zbytek příručky k učení se (Kapitola 3 až 5). Přirozeně
můžete ihned číst dále. Další kapitoly jsou ale napsány s
předpokladem, že ovládáte zadávací jazyk
LilyPondu. Další kapitoly také můžete zběžně prohlédnout
a pak se k nim opět vrátit, až získáte nějaké zkušenosti
s notovým zápisem.

V tomto cvičení, stejně tak jako v celé příručce k učení se,
se na konci každé části nachází část @strong{Podívejte se také na},
kde se nacházejí odkazy na jiné části.
Tyto odkazy byste po prvním přečtení neměl následovat;
teprve až si přečtete celou příručku k učení se,
můžete v případě potřeby následovat těchto odkazů, abyste si
prohloubili vědomosti k námětu.

Nyní si, prosím, přečtěte
@ref{Přehled o příručkách}, jestliže jste to až doteď neudělal.
O LilyPondu je závratné množství informací, takže začátečníci se
jich hned správně nedopátrají. Když strávíte byť jen několik minut čtením
této části, můžete si ušetřit hodiny hledání na nesprávných místech
provázené pocity marnosti!

